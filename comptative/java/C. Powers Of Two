import java.util.*;

import java.io.*;
public class PowersOfTwo {

	public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st  = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());
	    Map<Integer, Integer> ans = new HashMap<>();
        Queue<Integer> q  = new LinkedList<>();
        for(int i = 0; i <= 30; i++)
        {
			if((n & (1 << i))!=0)
			{
				if(i > 0)
					q.add(1 << i);
				ans.put(1 << i,ans.getOrDefault(1 << i, 0)+1);
			}
		}
        	
	if((ans.size()) > k)
	{
		System.out.print("NO");
        System.exit(0);
	}
	int cnt = ans.size();
	while(cnt < k && !q.isEmpty())
	{
		int z = q.peek();
		q.remove();
		ans.put(z,ans.get(z)-1);
	    ans.put(z/2,ans.getOrDefault(z/2, 0)+2);//		ans[z / 2] += 2;
		if(z / 2 > 1)
		{
			q.add(z / 2);
			q.add(z / 2);
		}
		cnt++;
	}
	if(cnt < k)
	{
		System.out.print("NO");
                System.exit(0);
	}
	System.out.print("YES\n");
	
	for( Map.Entry<Integer,Integer> entry :ans.entrySet())
		for(int i = 0; i < entry.getValue(); i++)
			System.out.print( entry.getKey());
	}
}
