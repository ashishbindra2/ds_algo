import java.io.*;
import java.util.*;
public class TestClass {
   public static int siz = 10000000;
      public static int sev[] = new int[siz+1];
       static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
    static void  secie(){
      for(int i=1;i<=siz;i++)
            sev[i] = i;
            for(int i=2;i*i<=siz;i++){
                 if(sev[i]==i){
                     for(int j=i*i;j<=siz;j+=i){
                         if(sev[j]==j)
                             sev[j]=i;
                     }
                 }
            }
   }
    public static void main(String[] args) throws IOException {
               FastReader s = new FastReader();
 secie();
        PrintWriter wr = new PrintWriter(System.out);
        int p = s.nextInt();
        int T = s.nextInt();
        for(int t_i=0; t_i<T; t_i++)
        {
            int n = s.nextInt();

            String out_ = check_special(n, p);
            System.out.println(out_);
         }

         wr.close();
        // br.close();
    }
    static String check_special(int n, int p){
      int cnt=0,c=0;
  while(n!=1){
               
                  if (c != sev[n]) cnt++;
            //   if (c == sev[n]) 
            //         break;
            //     cnt++;
            c = sev[n];
                n=n/sev[n];
                
            }
        if(p<=cnt)
           return "YES";

      return "NO";
    }
}
