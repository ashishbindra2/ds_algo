
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.OutputStream;
import java.util.StringTokenizer;
import java.io.OutputStreamWriter;
import java.lang.StringBuilder;
class TestClass {
static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
    final static int siz= 5000000;
    static boolean sev[] = new boolean[siz+1];
        public static void seive(){
            sev[0]=true;
            sev[1]=true;
          for(int i=2;i*i<=siz;i++){
              if(sev[i]==false){
                  for(int j=i*i;j<=siz;j+=i){
                         sev[j]=true;
                  }
              }
          }
      }
    public static void main(String args[] ) throws Exception {
        seive();
        long prefix[] = new long[siz+1];
        prefix[0]=0;
        prefix[1]=0;
  for(int i=2;i<=siz;i++){
         if(sev[i]==false){
              prefix[i]= prefix[i-1]+i;
         }else
            prefix[i]=prefix[i-1];
  }
     
             OutputStream out = new BufferedOutputStream ( System.out );
           FastReader s = new FastReader();

        int n = s.nextInt();  
        while(n-->0){
            int l = s.nextInt();   
            int r = s.nextInt();    
             	long sum = prefix[r];
			if(l!=0)
			    sum-=prefix[l-1];
            out.write((sum + "\n").getBytes());
        out.flush();

        }    
    }
}
