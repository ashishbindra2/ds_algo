 import java.io.*;
import java.util.*;

class TestClass {
    
    public static void main(String args[] ) throws Exception {
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
StringBuilder sb = new StringBuilder();
String name = br.readLine();
int n = Integer.parseInt(name);
String[] arr = br.readLine().split(" ");

        int nums[] =new int[n];
        for(int i=0;i<arr.length;i++)
          nums[i] = Integer.parseInt(arr[i]);
        Arrays.sort(nums);
       
        for(int i=0;i<n-1;i++){
            if((nums[i]^nums[i+1])!=0)
               System.out.print(nums[i]+" ");
            else
                i++;
        }
         if(n==2){
            if((nums[0]^nums[1])!=0)
               System.out.print(nums[1]+" ");              
        }else{
             if((nums[n-1]^nums[n-2])!=0)
               System.out.print(nums[n-1]+" ");  
        }
    }
}

//map
 import java.io.*;
import java.util.*;

class TestClass {
    
    public static void main(String args[] ) throws Exception {
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
StringBuilder sb = new StringBuilder();
String name = br.readLine();
int n = Integer.parseInt(name);
String[] arr = br.readLine().split(" ");         
 int a =0;
Map<Integer,Boolean> m = new TreeMap<Integer,Boolean>();
for(int i = 0;i < n;i++)
{
    a = Integer.parseInt(arr[i]);
    if(m.containsKey(a))
        m.put(a, false);
    else
        m.put(a, true);
}
for (Integer i : m.keySet()) {
    if(m.get(i))
        System.out.print(i+" ");
}
}
}
//fastest
 import java.io.*;
import java.util.*;

class TestClass {
    
    public static void main(String args[] ) throws Exception {
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
StringBuilder sb = new StringBuilder();
String name = br.readLine();
int n = Integer.parseInt(name);
String[] arr = br.readLine().split(" ");         
 int maxn = (int)1e6+14;
int[] mark=new int[maxn];
	for(int i = 0; i < n; i++){
		int x=Integer.parseInt(arr[i]);
		mark[x] ^= 1;
	}
	for(int i = 1; i < maxn; i++)
		if(mark[i]==1)
			System.out.print(i+" ");
}
}
