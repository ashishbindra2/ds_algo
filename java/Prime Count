
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.OutputStream;
import java.util.StringTokenizer;
import java.io.OutputStreamWriter;
import java.lang.StringBuilder;
class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
  
  public static int siz = 10000000;
	public static boolean se[] = new boolean[siz+1];
    public static int prefix[] = new int[10000001];
    public static void main(String args[] ) throws Exception {
   
    for (int i = 2; (i * i) <= siz; i++)
		{
			if (se[i] == false) {
				for (int j =(i * i); j <= siz; j += i)
					se[j] = true;
			}
		}
          prefix[0]=0;
        prefix[1]=0;
        int ct=0;
  for(int i=2;i<=siz;i++){
         if(se[i]==false){
             ct++;
              prefix[i]= ct;
         }else
            prefix[i]=prefix[i-1];
  }
           FastReader s = new FastReader();
           
         OutputStream out = new BufferedOutputStream ( System.out );
        int t = s.nextInt();
        while(t-->0){ long c=0;
           int n =  s.nextInt();
              out.write((prefix[n] + "\n").getBytes());
        }
              out.flush();
    }
}
