As we know the sum of first M odd is M2.Since we require candy packet to be consecutive and distinct we can write N as :

a2 - b2 = N (where a and b are ath  and bth odd number respectively.

which can also be written as:- (a+b) * (a-b) = N. Now we can interate over the divisors of N.

Let x and y be two divisors such that x*y=N.(where x>=y).

Then,

a+b = x

a-b = y

solving above two equations we get :- 2*a = x+y or  a = (x+y)/2.

Means if x+y is even there is a set of candy packets that Lola can buy and we increment the counter by 1.

we can do this for all the remaining pair of divisors.

Author's Solution
#include<bits/stdc++.h>
using namespace std;
#define int long long int
int32_t main()
{
    int n;
    cin>>n;
    int cnt=0;
    for(int i=1;i*i<=n;i++)
    {
        if(n%i==0)
        {
            int x=i;
            int y=n/i;
            if((x+y)%2==0)
            {
                cnt++;
            }
        }
    }
    cout<<cnt;
}
Tester's Solution
from math import sqrt

n = int(input())
ans = 0
for i in range(1, int(sqrt(n) + 1)):
    if n % i == 0 and i % 2 == n // i % 2:
        ans += 1
print(ans)
